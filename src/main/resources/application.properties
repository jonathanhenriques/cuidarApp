# suppress inspection "SpellCheckingInspection" for whole file

########## CONFIGURACOES GERAIS ###########################

#spring.profiles.active=teste
spring.application.name=CuidarApp
#server.servlet.context-path=/api/v1
# server.port=8080

# desabilita nome aleatorio para banco h2
spring.datasource.generate-unique-name=false

# desabilita reload automatico devtools
spring.devtools.restart.enabled=true

# habilita leitura de arquivos ._data.sql
#spring.jpa.defer-datasource-initialization=true


##configurando data-hora
spring.mvc.format.date=yyyy-MM-dd
spring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss
spring.mvc.format.time=HH:mm:ss

#
#################################################################


############CONFIGURACOES BD H2#################################
server.port=8081

spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#habilitando console visual e endereco de acesso
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#Habilitando visualizacao do codigo sql criado
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=false


#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop

#le o _data.sql e inicializa as tabelas
#spring.jpa.defer-datasource-initialization=true

#token pegando de variavel de ambiente
api.security.token.secret=${JWT_SECRET:12345678}

#
##configurando data-hora
#spring.mvc.format.date=yyyy-MM-dd
#spring.mvc.format.date-time=yyyy-MM-dd HH:mm:ss
#spring.mvc.format.time=HH:mm:ss

############CONFIGURACOES BD H2#################################

#
########### CONFIGURACOES DO BD ###########################
## parametro de conexao com o banco mysql
## createDataBase cria o BD caso não exista
## ServerTime define a localizacao do BD e evita erros
## &useUnicode=yes&characterEncoding=UTF-8 para corrigir problemas de acentuacao no BD
#spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSl=false
#
## login e senha
#spring.datasource.username=root
#spring.datasource.password=159951
#
########### CONFIGURACOES DO BD ###########################
#
#################################################################################################
#
########### CONFIGURACOES DA JPA ###########################
## indica o dialeto para o Hibernate gerar a sintaxe SQL correta suportada pelo MySQL 8.
## influencia nas configuracoes das tabelas criadas, como tipo de engine.
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#
##cria um arquivo sql com o script de geracao das tabelas
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#util quando se cria uma nova tabela e podemos gerar o script somente desta criada por ultimo
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
## indica o local para salvar desse arquivo
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/1_ddl.sql
##gerar o sql  já formatado.
#spring.jpa.properties.hibernate.format_sql=true
#
#desabilita o flyway na inicializacao
#spring.flyway.enabled=false

####################DESABILITAR AO SE UTILIZAR FLYWAY#########################
# gera sql e cria tabelas automaticamente *USAR SOMENTE EM TESTES*
#spring.jpa.generate-ddl=true
# nao criar tabelas automaticamente
spring.jpa.hibernate.ddl-auto=none
# cria e dropa as tabelas no reinicio da aplicacao *USAR SOMENTE EM TESTES*
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update

####################DESABILITAR AO SE UTILIZAR FLYWAY#########################

#indicando local das migrations baseado no profile ativo
#teste
spring.flyway.locations=classpath:db/migration
#prod application-prod.properties
#spring.flyway.locations=classpath:db/migration/prod
#spring.flyway.locations=classpath:db/migration,classpath:db/migration/testedata
#
#
## exibi no console o sql gerado pelo hibernate e formata ou nao
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=false
#
## Informando nome dos scripts de massa a serem lidos
##spring.datasource.data=import_1.sql,import_2.sql
## ou
##spring.jpa.properties.hibernate.hbm2ddl.import_files=arquivo1.sql,arquivo2.sql
#
## Muda o caminho de leitura dos scripts
##spring.datasource.data=classpath:data/import.sql
#
##permitir a quebra de linhas no import.sql.
#spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
#
##se os scripts causarem excecoes, o aplicativo nao falhara ao iniciar
##spring.datasource.continue-on-error
#
##exibição no console dos parâmetros recebidos
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
##ver tempo e performace das querys
##hibernate.generate_statistics
#spring.jpa.hibernate.generate_statistics=true
##org.hibernate.stat=DEBUG
#logging.level.org.hibernate.stat=DEBUG
#
#
#################################################################
#
########### CONFIGURACOES HIKARI POOL DE CONEXOES ###########################
#
##valor maximo de conexoes
#spring.datasource.hikari.maximum-pool-size: 10
##minimo de conexoes
#spring.datasource.hikari.minimum-idle: 10
##tempo em millis para encerrar conexoes ociosas
#spring.datasource.hikari.idle-timeout: 30000
#
#################################################################