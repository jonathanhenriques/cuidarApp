# suppress inspection "SpellCheckingInspection" for whole file

########## CONFIGURACOES GERAIS ###########################
nome.perfil=teste
spring.application.name=CuidarAppTeste
#server.servlet.context-path=/api/v1
server.port=8081
# desabilita reload automatico devtools
spring.devtools.restart.enabled=true
# habilita leitura de arquivos ._data.sql
#spring.jpa.defer-datasource-initialization=true
########## CONFIGURACOES GERAIS ###########################

#

#############CONFIGURACOES BD H2#################################
# desabilita nome aleatorio para banco h2
spring.datasource.generate-unique-name=false
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#habilitando console visual e endereco de acesso
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#Habilitando visualizacao do codigo sql criado
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=false
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop
#le o data.sql e inicializa as tabelas
#spring.jpa.defer-datasource-initialization=true
#############CONFIGURACOES BD H2#################################

#

########### CONFIGURACOES DA JPA ###########################
# indica o dialeto para o Hibernate gerar a sintaxe SQL correta suportada pelo MySQL 8.
# influencia nas configuracoes das tabelas criadas, como tipo de engine.
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
#cria um arquivo sql com o script de geracao das tabelas
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#util quando se cria uma nova tabela e podemos gerar o script somente desta criada por ultimo
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=update
# indica o local para salvar desse arquivo
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql
#gerar o sql  ja formatado.
spring.jpa.properties.hibernate.format_sql=true
########### CONFIGURACOES DA JPA ###########################

#

####################DESCOMENTAR AO SE UTILIZAR DO FLYWAY EM TESTE#########################
# gera sql e cria tabelas automaticamente *USAR SOMENTE EM TESTES*
spring.jpa.generate-ddl=true
# cria e dropa as tabelas no reinicio da aplicacao *USAR SOMENTE EM TESTES*
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=create-drop
#desabilita o flyway na inicializacao
#spring.flyway.enabled=false
# Informando nome dos scripts de massa a serem lidos
#spring.datasource.data=import_1.sql,import_2.sql
# ou
#spring.jpa.properties.hibernate.hbm2ddl.import_files=arquivo1.sql,arquivo2.sql
# Muda o caminho de leitura dos scripts
#spring.datasource.data=classpath:data/import.sql
#permitir a quebra de linhas no import.sql.
spring.jpa.properties.hibernate.hbm2ddl.import_files_sql_extractor=org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
# nao criar tabelas automaticamente
#spring.jpa.hibernate.ddl-auto=none
spring.flyway.locations=classpath:db/migration
####################DESCOMENTAR AO SE UTILIZAR DO FLYWAY EM TESTE#########################

#

########### CONFIGURACOES HIKARI POOL DE CONEXOES ###########################
##valor maximo de conexoes
#spring.datasource.hikari.maximum-pool-size: 10
##minimo de conexoes
#spring.datasource.hikari.minimum-idle: 10
##tempo em millis para encerrar conexoes ociosas
#spring.datasource.hikari.idle-timeout: 30000
########### CONFIGURACOES HIKARI POOL DE CONEXOES ###########################

#

#

#

###exibicao no console dos parametros recebidos
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
###ver tempo e performace das querys
#hibernate.generate_statistics=true
#spring.jpa.hibernate.generate_statistics=true
#org.hibernate.stat=DEBUG
#logging.level.org.hibernate.stat=DEBUG
##
#
##ignora a pasta static do projeto
#spring.resources.add-mappings=false
#
##falha quando passada uma propriedade anotada com @jsonIgnore
#spring.jackson.deserialization.fail-on-ignored-properties=true
#
##se nao existir um handleException para a url citada, informe NoHandlerFoundException
#spring.mvc.throw-exception-if-no-handler-found=true
#
##falha quando passado um parametro desconhecido no json
#spring.jackson.deserialization.fail-on-unknown-properties=true
##
##Passa o nome dos atributos no json automaticamente para snake case
##spring.jackson.property-naming-strategy=SNAKE_CASE
#
###
## Logging sl4j
## token do solarwinds - https://adajow.loggly.com/tokens
## valor pode ser substituito por variavel de ambiente do pc ou servidor
##logging.loggly.token=ca3adb63-90ce-4597-be15-ecae7ff8ace0
##substituida por variavel de ambiente na configuracao do projeto chamada:
##logging.loggly.token=TOKEN_LOGGLY