#versao do arquivo docker compose
version: "3.9"

#cria as redes que serao usadas usando quais drivers
networks:
  cuidarapp-network:
#    rede bridge permite que os contêineres se comuniquem entre si e com o host, com  IP atribuídos pelo próprio Docker.
    driver: bridge

#os containers que devem ser levantados
services:
#  nome container
  cuidarapp-mysql:
    #  imagem container (mysql)
    image: mysql:8.0

#variaveis de ambiente passado em linha de comando
    environment:
      MYSQL_ROOT_PASSWORD: 159951
    ports:
      - "3306:3306"
    networks:
      - cuidarapp-network

  cuidarapp-api:
#    comentado pois build sendo feito pelo maven
#    faz o build na pasta atual ("ponto")
#    build: .


    image: jonathanhenriques/cuidarapp-api

#    substitui o CMD ["java", "-jar", "api.jar"] do dockerfile
#    executa script, servico a ser observado iniciar , tempo de espera por sucesso, 30 seg, --, args
    command: ["/wait-for-it.sh", "cuidarapp-mysql:3306", "-t", "30", "--", "java", "-jar", "api.jar"]
    environment:
#      DB_HOST criado como variavel para o docker pegar o ip do mysql automaticamente
#      pois passando cuidarapp-mysql(nome do container mysql criado) ele pega automaticamente o ip
      DB_HOST: cuidarapp-mysql

#      comentado pois portas geradas automaticamente por conta do load balance
#    descomentado ate que nginx volte a funcionar
    ports:
      - "8082:8082"
    networks:
      - cuidarapp-network
#    indica para so iniciar apos subir o container cuidarapp-mysql
    depends_on:
      - cuidarapp-mysql

#    sobe dois containeres (para balanceamento de carta)
#  comentado pois esta sendo passado via linha de comando
#    deploy:
#      replicas: 2

#comentado ate que volte a funcionar
#  servico destinado ao servidor nginx para fazer load balance da api
#  cuidarapp-proxy:
##    faz o build usando a imagem indicada no nginx/Dockerfile
#    build: ./nginx
##    nome da imagem no nginx/Dockerfile
#    image: cuidarapp-proxy
#    ports:
#      - "8082:80"
#    networks:
#      - cuidarapp-network
##    espera o container da api subir primeiro
#    depends_on:
#      - cuidarapp-api